(provide 'minor/search-cfg)


(defun lcl:seach-hotkeys ()
  (define-key ivy-minibuffer-map (kbd "M-i") 'ivy-previous-line)
  (define-key ivy-minibuffer-map (kbd "<up>") 'ivy-previous-line)
  (define-key ivy-minibuffer-map (kbd "M-k") 'ivy-next-line)
  (define-key ivy-minibuffer-map (kbd "<down>") 'ivy-next-line)
  (define-key ivy-minibuffer-map (kbd "M-v") 'ivy-yank-word)
  (define-key ivy-minibuffer-map (kbd "C-S-v") 'ivy-yank-word)
  (define-key ivy-minibuffer-map (kbd "M-d") 'ivy-backward-delete-char)
  (define-key ivy-minibuffer-map (kbd "M-f") 'ivy-delete-char)
  (define-key ivy-minibuffer-map (kbd "M-<") 'ivy-beginning-of-buffer)
  (define-key ivy-minibuffer-map (kbd "M->") 'ivy-end-of-buffer)
  (define-key ivy-minibuffer-map (kbd "TAB") 'ivy-partial-or-done)
  (define-key ivy-minibuffer-map (kbd "M-o") 'ivy-next-history-element)
  (define-key ivy-minibuffer-map (kbd "M-u") 'ivy-previous-history-element)
  (define-key ivy-minibuffer-map (kbd "C-q") 'minibuffer-keyboard-quit)
  (define-key ivy-minibuffer-map (kbd "C-f") 'ivy-reverse-i-search)
  (define-key ivy-minibuffer-map (kbd "C-h") 'swiper-query-replace)
  (define-key ivy-minibuffer-map (kbd "M-l") 'ivy-forward-char)
  (define-key ivy-minibuffer-map (kbd "M-j") 'backward-char)
  (define-key ivy-minibuffer-map (kbd "M-g") 'ivy-kill-line))

(defun cfg:seach ()
  (ivy-mode 1)
  (lcl:seach-hotkeys)
  (advice-add 'swiper :after #'recenter)
  )
(add-hook 'cfg-hook:minor-mode 'cfg:seach)

(cfg:add-package 'swiper)
;; (cfg:add-package 'counsel)
