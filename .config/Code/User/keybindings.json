// Place your key bindings in this file to override the defaultsauto[]
[
    // Additional arrow (disable)
    { "key": "alt+l",               "command": "-toggleFindInSelection",
                                    "when": "editorFocus" },
    { "key": "alt+l",               "command": "-toggleSearchEditorContextLines",
                                    "when": "inSearchEditor" },
    { "key": "alt+k",               "command": "-keybindings.editor.recordSearchKeys",
                                    "when": "inKeybindings && inKeybindingsSearch" },
    { "key": "alt+o",               "command": "-C_Cpp.SwitchHeaderSource",
                                    "when": "editorTextFocus && editorLangId == 'c'" },
    { "key": "alt+o",               "command": "-C_Cpp.SwitchHeaderSource",
                                    "when": "editorTextFocus && editorLangId == 'cpp'" },
    { "key": "ctrl+j",              "command": "-editor.action.joinLines",
                                    "when": "editorTextFocus" },
    { "key": "ctrl+j",              "command": "-workbench.action.togglePanel" },
    { "key": "ctrl+l",              "command": "-notebook.centerActiveCell",
                                    "when": "notebookEditorFocused" },
    { "key": "ctrl+l",              "command": "-expandLineSelection",
                                    "when": "textInputFocus" },
    { "key": "ctrl+l",              "command": "-expandLineSelection",
                                    "when": "editorFocus" },
    { "key": "ctrl+k ctrl+u",       "command": "-editor.action.transformToUppercase",
                                    "when": "editorTextFocus" },
    { "key": "ctrl+k ctrl+u",       "command": "-editor.action.removeCommentLine",
                                    "when": "editorTextFocus && !editorReadonly" },
    { "key": "ctrl+k ctrl+l",       "command": "-editor.toggleFold",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+l",       "command": "-editor.action.transformToLowercase",
                                    "when": "editorTextFocus" },
    { "key": "ctrl+k ctrl+b",       "command": "-workbench.action.toggleSidebarVisibility" },
    { "key": "ctrl+k ctrl+b",       "command": "-editor.action.setSelectionAnchor",
                                    "when": "editorTextFocus" },
    { "key": "ctrl+k ctrl+1",       "command": "-editor.foldLevel1",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+2",       "command": "-editor.foldLevel2",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+3",       "command": "-editor.foldLevel3",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+4",       "command": "-editor.foldLevel4",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+5",       "command": "-editor.foldLevel5",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+6",       "command": "-editor.foldLevel6",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+7",       "command": "-editor.foldLevel7",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+[",       "command": "-editor.foldRecursively",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+f",       "command": "-editor.action.formatSelection",
                                    "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly" },
    { "key": "ctrl+k ctrl+r",       "command": "-git.revertSelectedRanges",
                                    "when": "isInDiffEditor" },
    { "key": "ctrl+k ctrl+alt+s",   "command": "-git.stageSelectedRanges",
                                    "when": "isInDiffEditor" },
    { "key": "ctrl+k ctrl+n",       "command": "-git.unstageSelectedRanges",
                                    "when": "isInDiffEditor" },
    { "key": "ctrl+k ctrl+q",       "command": "-workbench.action.navigateToLastEditLocation" },
    { "key": "ctrl+k m",            "command": "-workbench.action.editor.changeLanguageMode" },
    { "key": "ctrl+k ctrl+c",       "command": "-editor.action.addCommentLine",
                                    "when": "editorTextFocus && !editorReadonly" },
    { "key": "ctrl+k ctrl+i",       "command": "-editor.debug.action.showDebugHover",
                                    "when": "editorTextFocus && inDebugMode" },
    { "key": "ctrl+k ctrl+k",       "command": "-deleteAllRight",
                                    "when": "editorTextFocus && !editorReadonly" },
    { "key": "ctrl+k e",            "command": "-workbench.files.action.focusOpenEditorsView",
                                    "when": "workbench.explorer.openEditorsView.active" },
    { "key": "ctrl+k c",            "command": "-workbench.files.action.compareWithClipboard" },
    { "key": "ctrl+k d",            "command": "-workbench.files.action.compareWithSaved" },
    { "key": "ctrl+k o",            "command": "-workbench.action.files.showOpenedFileInNewWindow" },
    { "key": "ctrl+k ctrl+o",       "command": "-workbench.action.files.openFolder" },
    { "key": "ctrl+k s",            "command": "-workbench.action.files.saveWithoutFormatting" },
    { "key": "ctrl+k ctrl+0",       "command": "-editor.foldAll",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+/",       "command": "-editor.foldAllBlockComments",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+8",       "command": "-editor.foldAllMarkerRegions",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k n",            "command": "-editor.action.marker.next",
                                    "when": "editorFocus" },
    { "key": "ctrl+k p",            "command": "-editor.action.marker.prev",
                                    "when": "editorFocus" },
    { "key": "ctrl+k ctrl+r",       "command": "-workbench.action.keybindingsReference" },
    { "key": "ctrl+k v",            "command": "-markdown-preview-enhanced.openPreviewToTheSide",
                                    "when": "editorLangId == 'markdown'" },
    { "key": "ctrl+k v",            "command": "-markdown.showPreviewToSide",
                                    "when": "editorLangId == 'markdown'" },
    { "key": "ctrl+k ctrl+d",       "command": "-editor.action.moveSelectionToNextFindMatch",
                                    "when": "editorFocus" },
    { "key": "ctrl+k f12",          "command": "-editor.action.revealDefinitionAside",
                                    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "ctrl+k ctrl+t",       "command": "-workbench.action.selectTheme" },
    { "key": "ctrl+k ctrl+m",       "command": "-workbench.extensions.action.showRecommendedKeymapExtensions" },
    { "key": "ctrl+k ctrl+s",       "command": "-workbench.action.openGlobalKeybindings" },
    { "key": "ctrl+k ctrl+k",       "command": "-editor.action.selectFromAnchorToCursor",
                                    "when": "editorTextFocus && selectionAnchorSet" },
    { "key": "ctrl+k ctrl+i",       "command": "-editor.action.showHover",
                                    "when": "editorTextFocus" },
    { "key": "ctrl+k ctrl+x",       "command": "-editor.action.trimTrailingWhitespace",
                                    "when": "editorTextFocus && !editorReadonly" },
    { "key": "ctrl+k ctrl+j",       "command": "-editor.unfoldAll",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+0",       "command": "-editor.unfoldAll",
                                    "when": "editorFocus" },
    { "key": "ctrl+k ctrl+9",       "command": "-editor.unfoldAllMarkerRegions",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+]",       "command": "-editor.unfoldRecursively",
                                    "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+k ctrl+shift+w", "command": "-workbench.action.closeAllGroups" },
    { "key": "ctrl+k ctrl+w",       "command": "-workbench.action.closeAllEditors" },
    { "key": "ctrl+k w",            "command": "-workbench.action.closeEditorsInGroup" },
    { "key": "ctrl+k ctrl+down",    "command": "-workbench.action.closeActiveEditor" },
    { "key": "ctrl+k u",            "command": "-workbench.action.closeUnmodifiedEditors" },
    { "key": "ctrl+k ctrl+up",      "command": "-workbench.action.focusAboveGroup" },
    { "key": "ctrl+k ctrl+down",    "command": "-workbench.action.focusBelowGroup" },
    { "key": "ctrl+k ctrl+left",    "command": "-workbench.action.focusLeftGroup" },
    { "key": "ctrl+k ctrl+right",   "command": "-workbench.action.focusRightGroup" },
    { "key": "ctrl+k enter",        "command": "-workbench.action.keepEditor" },
    { "key": "ctrl+k down",         "command": "-workbench.action.moveActiveEditorGroupDown" },
    { "key": "ctrl+k left",         "command": "-workbench.action.moveActiveEditorGroupLeft" },
    { "key": "ctrl+k right",        "command": "-workbench.action.moveActiveEditorGroupRight" },
    { "key": "ctrl+k up",           "command": "-workbench.action.moveActiveEditorGroupUp" },
    { "key": "ctrl+k ctrl+pagedown","command": "-workbench.action.nextEditorInGroup" },
    { "key": "ctrl+k ctrl+pageup",  "command": "-workbench.action.previousEditorInGroup" },
    { "key": "ctrl+k shift+enter",  "command": "-workbench.action.pinEditor",
                                    "when": "config.workbench.editor.showTabs && !editorSticky" },
    { "key": "ctrl+k ctrl+p",       "command": "-workbench.action.showAllEditors" },
    { "key": "ctrl+k ctrl+up",      "command": "-workbench.action.splitEditor" },
    { "key": "ctrl+k ctrl+\\",      "command": "-workbench.action.splitEditorOrthogonal" },
    { "key": "ctrl+k ctrl+h",       "command": "-workbench.action.output.toggleOutput" },
    { "key": "ctrl+k z",            "command": "-workbench.action.toggleZenMode" },
    { "key": "ctrl+k shift+enter",  "command": "-workbench.action.unpinEditor",
                                    "when": "config.workbench.editor.showTabs && editorSticky" },
    { "key": "ctrl+k f",            "command": "-workbench.action.closeFolder" },
    { "key": "ctrl+k ctrl+k",       "command": "-editor.action.defineKeybinding",
                                    "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'" },
    { "key": "ctrl+k ctrl+k",       "command": "-keybindings.editor.defineKeybinding",
                                    "when": "inKeybindings && keybindingFocus" },
    { "key": "ctrl+k ctrl+e",       "command": "-keybindings.editor.defineWhenExpression",
                                    "when": "inKeybindings && keybindingFocus" },
    { "key": "ctrl+k f2",           "command": "-togglePeekWidgetFocus",
                                    "when": "inReferenceSearchEditor || referenceSearchVisible" },
    { "key": "ctrl+k down",         "command": "-views.moveViewDown",
                                    "when": "focusedView != ''" },
    { "key": "ctrl+k left",         "command": "-views.moveViewLeft",
                                    "when": "focusedView != ''" },
    { "key": "ctrl+k right",        "command": "-views.moveViewRight",
                                    "when": "focusedView != ''" },
    { "key": "ctrl+k up",           "command": "-views.moveViewUp",
                                    "when": "focusedView != ''" },
    { "key": "ctrl+k p",            "command": "-workbench.action.files.copyPathOfActiveFile" },
    { "key": "ctrl+k ctrl+o",       "command": "-workbench.action.files.openLocalFolder",
                                    "when": "remoteFileDialogVisible" },
    { "key": "ctrl+k r",            "command": "-workbench.action.files.revealActiveFileInWindows" },
    { "key": "ctrl+k a",            "command": "-workbench.action.showErrorsWarnings" },

    // Additional arrow
    { "key": "alt+j",               "command": "cursorLeft",
                                    "when": "textInputFocus" },
    { "key": "alt+l",               "command": "cursorRight",
                                    "when": "textInputFocus" },
    { "key": "alt+i",               "command": "cursorUp",
                                    "when": "textInputFocus" },
    { "key": "alt+k",               "command": "cursorDown",
                                    "when": "textInputFocus" },
    { "key": "alt+u",               "command": "cursorHome",
                                    "when": "textInputFocus" },
    { "key": "alt+o",               "command": "cursorEnd",
                                    "when": "textInputFocus" },
    { "key": "ctrl+j",              "command": "cursorWordStartLeft",
                                    "when": "textInputFocus" },
    { "key": "ctrl+l",              "command": "cursorWordStartRight",
                                    "when": "textInputFocus" },
    { "key": "ctrl+i",              "command": "editorScroll", "args": {"by": "line", "to": "up", "revealCursor": false, "value": 10},
                                    "when": "editorFocus" },
    { "key": "ctrl+k",              "command": "editorScroll", "args": {"by": "line", "to": "down", "revealCursor": false, "value": 10},
                                    "when": "editorFocus" },

    // Shift with additional arrow (disable)
    { "key": "shift+alt+j",         "command": "-bookmarks.expandSelectionToPrevious",
                                    "when": "editorTextFocus" },
    { "key": "shift+alt+l",         "command": "-bookmarks.expandSelectionToNext",
                                    "when": "editorTextFocus" },
    { "key": "shift+alt+i",         "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
                                    "when": "editorTextFocus" },
    { "key": "shift+alt+k",         "command": "-bookmarks.shrinkSelection",
                                    "when": "editorTextFocus" },
    { "key": "shift+alt+o",         "command": "-editor.action.organizeImports",
                                    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/" },
    { "key": "ctrl+shift+j",        "command": "-workbench.action.search.toggleQueryDetails",
                                    "when": "inSearchEditor || searchViewletFocus" },
    { "key": "ctrl+shift+l",        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
                                    "when": "editorTextFocus" },
    { "key": "ctrl+shift+l",        "command": "-editor.action.selectHighlights",
                                    "when": "editorFocus" },
    { "key": "ctrl+shift+l",        "command": "-addCursorsAtSearchResults",
                                    "when": "fileMatchOrMatchFocus && searchViewletVisible" },
    { "key": "ctrl+shift+l",        "command": "-selectAllSearchEditorMatches",
                                    "when": "inSearchEditor" },
    { "key": "ctrl+shift+i",        "command": "-workbench.action.toggleDevTools",
                                    "when": "isDevelopment" },
    { "key": "ctrl+shift+i",        "command": "-notebook.formatCell",
                                    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'" },
    { "key": "ctrl+shift+i",        "command": "-editor.action.formatDocument",
                                    "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor" },
    { "key": "ctrl+shift+i",        "command": "-editor.action.formatDocument.none",
                                    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly" },
    { "key": "ctrl+shift+i",        "command": "-notebook.format",
                                    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'" },
    { "key": "ctrl+shift+k",        "command": "-editor.action.deleteLines",
                                    "when": "textInputFocus && !editorReadonly" },
    { "key": "ctrl+shift+k",        "command": "-editor.action.deleteLines",
                                    "when": "editorFocus" },

    // Shift with additional arrow
    { "key": "shift+alt+j",         "command": "cursorLeftSelect",
                                    "when": "textInputFocus" },
    { "key": "shift+alt+l",         "command": "cursorRightSelect",
                                    "when": "textInputFocus" },
    { "key": "shift+alt+i",         "command": "cursorUpSelect",
                                    "when": "textInputFocus" },
    { "key": "shift+alt+k",         "command": "cursorDownSelect",
                                    "when": "textInputFocus" },
    { "key": "shift+alt+u",         "command": "cursorHomeSelect",
                                    "when": "textInputFocus" },
    { "key": "shift+alt+o",         "command": "cursorEndSelect",
                                    "when": "textInputFocus" },
    { "key": "ctrl+shift+j",        "command": "cursorWordStartLeftSelect",
                                    "when": "textInputFocus" },
    { "key": "ctrl+shift+l",        "command": "cursorWordEndRightSelect",
                                    "when": "textInputFocus" },
    { "key": "ctrl+shift+i",        "command": "editor.action.moveLinesUpAction",
                                    "when": "editorTextFocus && !editorReadonly" },
    { "key": "ctrl+shift+k",        "command": "editor.action.moveLinesDownAction",
                                    "when": "editorTextFocus && !editorReadonly" },

    // Edit additional (disable)
    { "key": "alt+r",               "command": "-toggleFindRegex",
                                    "when": "editorFocus" },
    { "key": "alt+r",               "command": "-toggleSearchRegex",
                                    "when": "searchViewletFocus" },
    { "key": "alt+r",               "command": "-workbench.action.terminal.toggleFindRegex",
                                    "when": "terminalFindFocused || terminalFocus" },
    { "key": "ctrl+shift+;",        "command": "-breadcrumbs.focus",
                                    "when": "breadcrumbsPossible" },

    // Edit additional
    { "key": "alt+d",               "command": "deleteLeft",
                                    "when": "textInputFocus && !editorReadonly" },
    { "key": "alt+f",               "command": "deleteRight",
                                    "when": "textInputFocus && !editorReadonly" },
    { "key": "alt+e",               "command": "deleteWordLeft",
                                    "when": "textInputFocus && !editorReadonly" },
    { "key": "alt+r",               "command": "deleteWordRight",
                                    "when": "textInputFocus && !editorReadonly" },
    { "key": "ctrl+shift+;",        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                                    "when": "editorTextFocus" },

    // Undo, cut, copy, paste (disable)
    { "key": "alt+z",               "command": "-editor.action.toggleWordWrap" },
    { "key": "alt+c",               "command": "-toggleFindCaseSensitive",
                                    "when": "editorFocus" },
    { "key": "alt+c",               "command": "-toggleSearchCaseSensitive",
                                    "when": "searchViewletFocus" },
    { "key": "alt+c",               "command": "-toggleSearchEditorCaseSensitive",
                                    "when": "inSearchEditor && searchInputBoxFocus" },
    { "key": "alt+c",               "command": "-workbench.action.terminal.toggleFindCaseSensitive",
                                    "when": "terminalFindFocused || terminalFocus" },
    { "key": "alt+c",               "command": "-gitlens.showQuickCommitFileDetails",
                                    "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'alternate'" },

    // Undo, cut, copy, paste
    { "key": "alt+z",               "command": "undo"},
    { "key": "alt+x",               "command": "editor.action.clipboardCutAction" },
    { "key": "alt+c",               "command": "editor.action.clipboardCopyAction" },
    { "key": "alt+v",               "command": "editor.action.clipboardPasteAction" },

    // Menu interface (disable)

    // Menu interface
    { "key": "alt+m b",             "command": "workbench.action.toggleSidebarVisibility" },
    { "key": "alt+m l",             "command": "workbench.action.editor.changeLanguageMode" },
    { "key": "alt+m s",             "command": "workbench.action.gotoSymbol" },
    { "key": "alt+m a",             "command": "workbench.action.showAllSymbols" },
    { "key": "alt+m d",             "command": "editor.action.revealDeclaration" },
    { "key": "alt+m r",             "command": "references-view.find",
                                    "when": "editorHasReferenceProvider" },
    { "key": "alt+m i",             "command": "references-view.findImplementations",
                                    "when": "editorHasReferenceProvider" },

    // Menu text operation (disable)
    { "key": "ctrl+m",              "command": "-editor.action.jumpToBracket",
                                    "when": "editorFocus"},
    { "key": "ctrl+m",              "command": "-editor.action.toggleTabFocusMode" },

    // Menu text operation
    { "key": "ctrl+m ctrl+u",       "command": "editor.action.transformToUppercase",
                                    "when": "editorTextFocus && !editorReadonly" },
    { "key": "ctrl+m ctrl+l",       "command": "editor.action.transformToLowercase",
                                    "when": "editorTextFocus && !editorReadonly" },
    { "key": "ctrl+m ctrl+s",       "command": "workbench.action.files.saveAll" },

    // Build (disable)
    { "key": "ctrl+b",              "command": "-workbench.action.toggleSidebarVisibility" },
    { "key": "f7",                  "command": "-cmake.build" },

    // Build
    { "key": "ctrl+b",              "command": "workbench.action.tasks.reRunTask",
                                    "when": "editorLangId != 'markdown'" },
    { "key": "ctrl+shift+b",        "command": "workbench.action.tasks.build" },
    { "key": "f7",                  "command": "cmake.build",
                                    "when": "editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cmake'" },

    // Bookmarks (disable)
    { "key": "f2",                  "command": "-editor.action.rename",
                                    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly" },

    // Bookmarks
    { "key": "f2",                  "command": "bookmarks.jumpToNext",
                                    "when": "editorTextFocus" },
    { "key": "ctrl+f2",             "command": "bookmarks.toggle",
                                    "when": "editorTextFocus" },

    // Others
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "shift+alt+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "alt+g",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f6",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+t",
        "command": "go.test.cursor"
    },
    {
        "key": "alt+s",
        "command": "-gitlens.showQuickRepoStatus",
        "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "alt+s",
        "command": "C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "alt+s",
        "command": "C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.duplicateSelection"
    }
]
